#!/command/with-contenv bash
# shellcheck shell=bash disable=SC1091

# This script is only for dump978 autogain

source /scripts/common

READSB_AUTOGAIN_LOW_PCT="${DUMP978_AUTOGAIN_LOW_PCT:-${READSB_AUTOGAIN_LOW_PCT:-5.0}}"
READSB_AUTOGAIN_HIGH_PCT="${DUMP978_AUTOGAIN_HIGH_PCT:-${READSB_AUTOGAIN_HIGH_PCT:-10.0}}"
READSB_AUTOGAIN_USE_RAW="${DUMP978_AUTOGAIN_USE_RAW:-${READSB_AUTOGAIN_USE_RAW:-true}}"  # if true, use raw messages instead of accepted messages 
READSB_AUTOGAIN_MIN_SAMPLES="${DUMP978_AUTOGAIN_MIN_SAMPLES:-${READSB_AUTOGAIN_MIN_SAMPLES:-1000}}"
READSB_AUTOGAIN_INITIAL_GAIN="${DUMP978_AUTOGAIN_INITIAL_GAIN:-${READSB_AUTOGAIN_INITIAL_GAIN:-49.6}}"

STRONGSIGNAL_LIMIT="${2:--3.5}"

low="${READSB_AUTOGAIN_LOW_PCT}"
high="${READSB_AUTOGAIN_HIGH_PCT}"
gain_array=(0.0 0.9 1.4 2.7 3.7 7.7 8.7 12.5 14.4 15.7 16.6 19.7 20.7 22.9 25.4 28.0 29.7 32.8 33.8 36.4 37.2 38.6 40.2 42.1 43.4 43.9 44.5 48.0 49.6 -10)
autogain_dir="/var/globe_history/autogain"
mkdir -p $autogain_dir
touch $autogain_dir/strong $autogain_dir/total

# work around stupid locale stuff
export LC_ALL=C

if [[ "$1" == "reset" ]]; then
    echo "[INFO] Reset AutoGain - restarting initialization process with an initial gain of $READSB_AUTOGAIN_INITIAL_GAIN"
    rm -f $autogain_dir/* >/dev/null 2>&1 || true
    s6-svc -r /run/service/dump978
    s6-svc -r /run/service/autogain
    exit 0
elif [[ -z "$1" ]]; then
    echo "[INFO] Usage: $0 total;strong[;strong_pct]"
    echo "[INFO] or: $0 reset"
    exit 1
fi

oldstrong=$(cat $autogain_dir/strong 2>/dev/null)
oldtotal=$(cat $autogain_dir/total 2>/dev/null)
if [[ -z $oldstrong ]] || [[ -z $oldtotal ]]; then
	oldstrong=0
	oldtotal=0
fi

# use the values that were passed in via the commandline. Format is "total;strong;strong_pct" but we only use total and strong here
total="$(awk -F';' '{print $1}' <<< "$1" | tee $autogain_dir/strong)"
strong="$(awk -F';' '{print $2}' <<< "$1"| tee $autogain_dir/total)"

if [[ -z "$strong" ]] || [[ -z "$total" ]]; then
    echo "[INFO] Stats not yet ready. Skipping this $(basename "$0") run"
    exit 99
fi

if ! awk "BEGIN{ exit  ($total < $READSB_AUTOGAIN_MIN_SAMPLES) }"; then
    echo "[INFO] Total messages $total < $READSB_AUTOGAIN_MIN_SAMPLES - the decoder hasn't been running long enough. Skipping this $(basename "$0") run"
    exit 99
fi


if (( oldtotal > total )) || (( oldstrong > strong )) || (( oldtotal == total )); then
	oldstrong=0
	oldtotal=0
fi

strong=$((strong - oldstrong))
total=$((total - oldtotal))

if [[ $total == 0 ]]; then
    strong_percent=0
else
    strong_percent=$(awk "BEGIN {printf \"%.1f\", $strong * 100 / $total}")
fi

if [[ $strong_percent == "nan" ]]; then echo "[ERROR] can't automatically adjust gain!"; exit 1; fi

# Get the gain -- updated for docker-tar1090 use by kx1t
if [[ ! -f $autogain_dir/gain ]]; then
    oldgain="${READSB_AUTOGAIN_INITIAL_GAIN}"
    echo "$oldgain" > $autogain_dir/gain
    echo "[INFO] Initial run. Starting point for adjusting gain is $oldgain"
else
    read -r oldgain < $autogain_dir/gain
    oldgain="${oldgain:-49.6}"    # needed for stupidity reasons
fi

gain_index=28
for i in "${!gain_array[@]}"; do
    if ! awk "BEGIN{ exit  (${oldgain} <= ${gain_array[$i]}) }"; then
        gain_index="${i}"
        break
    fi
done

if ! awk "BEGIN{ exit  (${oldgain} >= 49.6) }"; then
    gain_index=28
fi

if [[ "$oldgain" == "-10" ]]; then
    gain_index=28
fi

if ((total < READSB_AUTOGAIN_MIN_SAMPLES)); then
    echo "[INFO] Only $total messages since last run - skipping this one, hopefully next run the total will be >$READSB_AUTOGAIN_MIN_SAMPLES. Gain remains at $oldgain."
    action=DoNothing

elif ! awk "BEGIN{ exit ($strong_percent > $low) }" && ! awk "BEGIN{ exit ($strong_percent < $high) }"; then
	echo "[INFO] No gain change needed. Out of $total messages, ${strong_percent}% percentage of messages >${STRONGSIGNAL_LIMIT} dB is in nominal range: ${low}% < ${strong_percent}% < ${high}%). Gain remains at $oldgain."
	action=DoNothing

elif ! awk "BEGIN{ exit ($strong_percent < $low) }" && [[ $gain_index == 28 ]]; then
    echo "[INFO] Could have used some more gain, but gain is already at maximum! Out of $total messages, strong (>${STRONGSIGNAL_LIMIT} dB) messages ${strong_percent}% < ${low}%. Gain remains at $oldgain."
    action=DoNothing

elif ! awk "BEGIN{ exit ($strong_percent > $high) }" && [[ $gain_index == 0 ]]; then
    echo "[INFO] Could have used some lower gain, but gain already at minimum! Out of $total messages, strong (>${STRONGSIGNAL_LIMIT} dB) messages ${strong_percent}% > ${high}%. Gain remains at $oldgain."
    action=DoNothing

elif [[ "${gain_array[$gain_index]}" == "" ]] || [[ "${gain_array[$gain_index]}" == "-10" ]]; then
    echo "[INFO] Could have used some more gain, but gain is already at maximum! Out of $total messages, strong (>${STRONGSIGNAL_LIMIT} dB) messages ${strong_percent}% < ${low}%. Gain remains at $oldgain."
    action=DoNothing

elif ! awk "BEGIN{ exit ($strong_percent < $low) }"; then
    gain_index=$((gain_index+1))
    gain="${gain_array[$gain_index]}"
    action=Increasing

elif ! awk "BEGIN{ exit ($strong_percent > $high) }"; then
    gain_index=$((gain_index-1))
    gain="${gain_array[$gain_index]}"
    action=Decreasing
fi

if [[ "$action" == "DoNothing" ]]; then exit 0; fi

if [[ "$action" == "Increasing" ]]; then
    echo "[INFO] Increasing gain from $oldgain to $gain. Out of $total messages, ${strong_percent}% messages >${STRONGSIGNAL_LIMIT} dB exceed lower boundary of ${low}%"
elif [[ "$action" == "Decreasing" ]]; then
    echo "[INFO] Decreasing gain from $oldgain to $gain. Out of $total messages, ${strong_percent}% messages >${STRONGSIGNAL_LIMIT} dB exceed upper boundary of ${high}%"
fi
echo "[INFO] Restarting several processes, please ignore the errors below."

# Set the gain
echo "$gain" > $autogain_dir/gain

# restart the services
s6-svc -r /run/service/dump978 2>/dev/null || true
s6-svc -r /run/service/stats 2>/dev/null || true

#reset numbers
echo 0 > $autogain_dir/strong
echo 0 > $autogain_dir/total