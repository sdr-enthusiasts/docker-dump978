#!/command/with-contenv bash
#shellcheck shell=bash

s6wrap=(s6wrap --quiet --timestamps --prepend="$(basename "$0")" --args)

# Set readsb binary
DUMP978_BIN="/usr/local/bin/dump978-fa"

# Listen on 0.0.0.0:DUMP978_RAW_PORT for raw messages
DUMP978_CMD=("--raw-port 0.0.0.0:30978")

# Listen on 0.0.0.0:DUMP978_JSON_PORT for json messages
DUMP978_CMD+=("--json-port 0.0.0.0:30979")

DUMP978_CMD+=("--format CS8")

# Handle "--sdr"
case "${DUMP978_DEVICE_TYPE:-rtlsdr}" in
    rtlsdr)
        DUMP978_CMD+=("--sdr driver=rtlsdr${DUMP978_RTLSDR_DEVICE:+,serial=${DUMP978_RTLSDR_DEVICE}}")
        DUMP978_CMD+=("--format=CS8")
    ;;
    stratuxv3)
        DUMP978_CMD+=("--stratuxv3 ${DUMP978_STRATUXV3_DEVICE:-/dev/uatradio}")
    ;;
    *)
        "${s6wrap[@]}" echo "ERROR: Unsupported DUMP978_DEVICE_TYPE!"
        sleep 60
        exit 1
    ;;
esac


# Handle "--sdr-auto-gain"
if [[ -n "$DUMP978_SDR_AGC" ]]; then
    DUMP978_CMD+=("--sdr-auto-gain")
fi

# Handle "--sdr-gain"
READSB_SDR_GAIN="${DUMP978_SDR_GAIN:-${READSB_SDR_GAIN}}"
if [[ -n "$READSB_SDR_GAIN" ]]; then
    sleep 3 # let autogain do its inital thing
    if [[ "${READSB_SDR_GAIN,,}" == "autogain" ]] && [[ -f /var/globe_history/autogain/gain ]]; then
        read -r gain < /var/globe_history/autogain/gain
        gain="${gain:-${DUMP978_AUTOGAIN_INITIAL_GAIN:-${READSB_AUTOGAIN_INITIAL_GAIN:-49.6}}}"
        DUMP978_CMD+=("--sdr-gain $gain")
    elif [[ -n "$READSB_SDR_GAIN" ]]; then
        [[ "${READSB_SDR_GAIN,,}" == "autogain" ]] && gain="${DUMP978_AUTOGAIN_INITIAL_GAIN:-${READSB_AUTOGAIN_INITIAL_GAIN:-49.6}}" || gain="${READSB_SDR_GAIN}"
        DUMP978_CMD+=("--sdr-gain $gain")
    fi
fi

# Handle "--sdr-ppm"
if [[ -n "$DUMP978_SDR_PPM" ]]; then
    DUMP978_CMD+=("--sdr-ppm $DUMP978_SDR_PPM")
fi

# Handle "--json-stdout"
if [[ -n "$DUMP978_JSON_STDOUT" ]]; then
    DUMP978_CMD+=("--json-stdout")
fi

# do some stuff "just in case"
mkdir -p /run/stats
touch /run/stats/stats.json
touch /run/stats/polar_range.influx

# start dump978-fa

# waittime is added to stagger the start time of the different SDRs.
# this should distribute the power load on the USB bus of small SBCs a bit, leading to fewer startup failures
waittime="$((RANDOM % 10))"
"${s6wrap[@]}" echo "In $waittime secs: invoking: ${DUMP978_BIN} ${DUMP978_CMD[*]}"
sleep "$waittime"
# shellcheck disable=SC2068
exec "${s6wrap[@]}" ${DUMP978_BIN} ${DUMP978_CMD[@]} 

sleep 5
